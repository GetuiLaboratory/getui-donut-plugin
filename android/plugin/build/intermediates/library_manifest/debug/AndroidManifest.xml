<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.donut.wxed34e654870cba42"
    android:versionName="0.0.2" >

    <uses-sdk
        android:minSdkVersion="21"
        android:targetSdkVersion="29"
        tools:overrideLibrary="com.huawei.agconnect.core" />

    <!-- 个推SDK权限配置开始 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.GET_TASKS" /> <!-- oppo android12  需要 alarm权限 -->
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM" />
    <uses-permission android:name="getui.permission.GetuiService.${applicationId}" /> <!-- vivo角标 -->
    <uses-permission android:name="com.vivo.notification.permission.BADGE_ICON" />

    <permission
        android:name="getui.permission.GetuiService.${applicationId}"
        android:protectionLevel="signature" />

    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />

    <permission
        android:name="${applicationId}.permission.PROCESS_PUSH_MSG"
        android:protectionLevel="signature" /> <!-- PUSH_PROVIDER and PUSH_WRITE_PROVIDER are both provider registered permissions for the notification switch. -->
    <!-- The SDK's notification bar switch, EMUI 9.x becomes write to the local sp, sharing the file through the provider to the push-rom, which reads the sp file to get the status of the notification bar switch. -->
    <permission
        android:name="${applicationId}.permission.PUSH_PROVIDER"
        android:protectionLevel="signature" />
    <permission
        android:name="${applicationId}.permission.PUSH_WRITE_PROVIDER"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.PROCESS_PUSH_MSG" />
    <uses-permission android:name="${applicationId}.permission.PUSH_PROVIDER" /> <!-- use to get NC version -->
    <queries>
        <package android:name="com.huawei.android.pushagent" />

        <intent>
            <action android:name="com.getui.vendor.action.push" />
        </intent>
        <intent>
            <action android:name="com.sonymobile.action.service.DEVICE_SDK_INFO" />
        </intent>
        <intent>
            <action android:name="com.huawei.hms.core.aidlservice" />
        </intent>
        <intent>
            <action android:name="com.huawei.hms.core" />
        </intent>

        <package android:name="com.huawei.works" />
    </queries>

    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />
    <uses-permission android:name="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE" />
    <uses-permission android:name="com.heytap.mcs.permission.RECIEVE_MCS_MESSAGE" /> <!-- 魅族 -->
    <uses-permission android:name="com.meizu.flyme.push.permission.RECEIVE" />
    <uses-permission android:name="com.meizu.c2dm.permission.RECEIVE" />
    <uses-permission android:name="${applicationId}.push.permission.MESSAGE" />
    <uses-permission android:name="${applicationId}.permission.C2D_MESSAGE" />

    <permission
        android:name="${applicationId}.push.permission.MESSAGE"
        android:protectionLevel="signature" />
    <permission
        android:name="${applicationId}.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.meizu.flyme.permission.PUSH" />
    <uses-permission android:name="com.hihonor.push.permission.READ_PUSH_NOTIFICATION_INFO" />

    <application
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:usesCleartextTraffic="true" >
        <service
            xmlns:android="http://schemas.android.com/apk/res/android"
            android:name="com.donut.wxed34e654870cba42.PluginPushService" />
        <service
            xmlns:android="http://schemas.android.com/apk/res/android"
            android:name="com.donut.wxed34e654870cba42.PluginIntentService" />

        <!--
          TODO: 由于donut还未开放多meta-data配置，和manifestPlaceholders配置， 需要在插件中配置相关推送参数，
          TODO: 参考：https://docs.getui.com/getui/mobile/vendor/androidstudio/ 的1.3 配置应用参数
        -->


        <!-- TODO：测试参数，上传插件时替换成自己的 -->
        <meta-data
            android:name="GETUI_APPID"
            android:value="djYjSlFVMf6p5YOy2OQUs8"
            tools:replace="android:value" />

        <!--
        TODO：厂商全不用可以填android:value="*" 不能删除meta-data，
        TODO：下面例子中部分value携带"厂商_",如XM_ ， 填写value值"厂商_"不要动，正确值如："XM_你的值"
        -->
        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="102527745"
            tools:replace="android:value" />
        <meta-data
            android:name="MIPUSH_APPID"
            android:value="XM_2882303761518401094"
            tools:replace="android:value" />
        <meta-data
            android:name="MIPUSH_APPKEY"
            android:value="XM_5301840122094"
            tools:replace="android:value" />
        <meta-data
            android:name="OPPOPUSH_APPKEY"
            android:value="OP_6a59a992cd46469aaa6ca9857a035e0c"
            tools:replace="android:value" />
        <meta-data
            android:name="OPPOPUSH_APPSECRET"
            android:value="OP_29d76998a6a04e00b901e4457b1fdfa0"
            tools:replace="android:value" />
        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="85230e35-6087-415c-bd3e-451f4835a1ef"
            tools:replace="android:value" />
        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="17675"
            tools:replace="android:value" />
        <meta-data
            android:name="api_key"
            android:value="85230e35-6087-415c-bd3e-451f4835a1ef"
            tools:replace="android:value" />
        <meta-data
            android:name="app_id"
            android:value="17675"
            tools:replace="android:value" />
        <meta-data
            android:name="MEIZUPUSH_APPID"
            android:value="MZ_145221"
            tools:replace="android:value" />
        <meta-data
            android:name="MEIZUPUSH_APPKEY"
            android:value="MZ_79e81a8441644ffba489a4301feef8dd"
            tools:replace="android:value" />
        <meta-data
            android:name="com.hihonor.push.app_id"
            android:value="*****"
            tools:replace="android:value" />
        <!-- ⽤来登记渠道的信息 -->
        <meta-data
            android:name="ZX_CHANNEL_ID"
            android:value="C01-GEztJH0JLdBC" /> <!-- ⽤来注册登记第三⽅ SDK 的 AppId 信息 -->
        <meta-data
            android:name="ZX_APPID_GETUI"
            android:value="913e6a50-c3b6-4989-8ac6-1ecb53649be3" /> <!-- 配置SDK核心服务 -->
        <service
            android:name="com.igexin.sdk.PushService"
            android:exported="false"
            android:label="NotificationCenter"
            android:process=":pushservice" />
        <service
            android:name="com.igexin.sdk.GTIntentService"
            android:exported="true" />
        <service
            android:name="com.igexin.sdk.GService"
            android:exported="true"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.getui.sdk.action" />
            </intent-filter>
        </service>

        <activity
            android:name="com.igexin.sdk.GetuiActivity"
            android:exported="true"
            android:process=":pushservice"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" >
            <intent-filter>
                <action android:name="com.getui.sdk.action" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.igexin.sdk.PopupActivity"
            android:configChanges="screenSize|orientation"
            android:exported="false"
            android:process=":pushservice"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <meta-data
            android:name="GTSDK_VERSION"
            android:value="3.3.7.0" />

        <service
            android:name="com.getui.gtc.GtcService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.getui.gtc.sdk.service.action" />
            </intent-filter>
        </service>

        <provider
            android:name="com.getui.gtc.base.GtcProvider"
            android:authorities="${applicationId}.getui.gtc.provider"
            android:exported="false" />

        <service
            android:name="com.igexin.sdk.HmsPushMessageService"
            android:exported="false"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.huawei.hms.support.api.push.PushMsgReceiver"
            android:directBootAware="true"
            android:exported="true"
            android:permission="${applicationId}.permission.PROCESS_PUSH_MSG" >
            <intent-filter>

                <!-- Mandatory, be used to receive notification bar message click event. -->
                <action android:name="com.huawei.intent.action.PUSH_DELAY_NOTIFY" />
                <!-- Optional, compatible with old huawei phones. -->
                <action android:name="com.huawei.intent.action.PUSH" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.huawei.hms.support.api.push.PushReceiver"
            android:directBootAware="true"
            android:exported="true"
            android:permission="${applicationId}.permission.PROCESS_PUSH_MSG" >
            <intent-filter>

                <!-- Mandatory, be used to receive tokens. -->
                <action android:name="com.huawei.android.push.intent.REGISTRATION" />
                <!-- Mandatory, be used to receive messages. -->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
            </intent-filter>
        </receiver> <!-- Definition of receiving service for notification bar and pass-through message of non-huawei mobile phone. -->
        <service
            android:name="com.huawei.hms.support.api.push.service.HmsMsgService"
            android:directBootAware="true"
            android:enabled="true"
            android:exported="true"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.huawei.push.msg.NOTIFY_MSG" />
                <action android:name="com.huawei.push.msg.PASSBY_MSG" />
            </intent-filter>
        </service>

        <provider
            android:name="com.huawei.hms.support.api.push.PushProvider"
            android:authorities="${applicationId}.huawei.push.provider"
            android:exported="true"
            android:readPermission="${applicationId}.permission.PUSH_PROVIDER"
            android:writePermission="${applicationId}.permission.PUSH_WRITE_PROVIDER" />

        <meta-data
            android:name="com.huawei.hms.client.service.name:push"
            android:value="push:6.12.0.300" />
        <meta-data
            android:name="com.huawei.hms.min_api_level:push:push"
            android:value="1" />

        <activity
            android:name="com.huawei.hms.support.api.push.TransActivity"
            android:exported="false" />

        <meta-data
            android:name="MIPUSH_SDK_VERSION_CODE"
            android:value="50602" />
        <meta-data
            android:name="MIPUSH_SDK_VERSION_NAME"
            android:value="5_6_2-C" /> <!-- 非小米系统才会用到 -->
        <!-- <service -->
        <!-- android:name="com.xiaomi.push.service.XMPushService" -->
        <!-- android:enabled="true" -->
        <!-- android:process=":pushservice" /> -->
        <!-- 非小米系统才会用到 -->
        <!-- <service -->
        <!-- android:name="com.xiaomi.push.service.XMJobService" -->
        <!-- android:enabled="true" -->
        <!-- android:exported="false" -->
        <!-- android:permission="android.permission.BIND_JOB_SERVICE" -->
        <!-- android:process=":pushservice" /> -->
        <!-- del -->
        <!-- <receiver -->
        <!-- android:name="com.xiaomi.push.service.receivers.PingReceiver" -->
        <!-- android:exported="false" -->
        <!-- android:process=":pushservice"> -->
        <!-- <intent-filter> -->
        <!-- <action android:name="com.xiaomi.push.PING_TIMER" /> -->
        <!-- </intent-filter> -->
        <!-- </receiver> -->
        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true"
            android:permission="com.xiaomi.xmsf.permission.MIPUSH_RECEIVE"
            android:process=":pushservice" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true"
            android:process=":pushservice" /> <!-- xiaomi SDK内部会判断无静态注册的话会内部动态注册 -->
        <!-- <receiver -->
        <!-- android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver" -->
        <!-- android:exported="true" -->
        <!-- android:process=":pushservice"> -->
        <!-- <intent-filter> -->
        <!-- <action android:name="android.net.conn.CONNECTIVITY_CHANGE" /> -->
        <!-- <category android:name="android.intent.category.DEFAULT" /> -->
        <!-- </intent-filter> -->
        <!-- </receiver> -->
        <receiver
            android:name="com.igexin.sdk.MiuiPushReceiver"
            android:exported="true"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver> <!-- 支持VoIP和场景化通过透明页点击跳转 -->
        <!-- 对于targetSdkVersion变更为S及以上的应用，需要接入MiPushSDK 4.9.1及以上版本(海外版需接入4.8.6及以上版本)，并声明NotificationClickedActivity -->
        <activity
            android:name="com.xiaomi.mipush.sdk.NotificationClickedActivity"
            android:enabled="true"
            android:excludeFromRecents="true"
            android:exported="true"
            android:launchMode="singleInstance"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" >
            <meta-data
                android:name="supportStyle"
                android:value="scene|voip" />
        </activity>

        <service
            android:name="com.igexin.sdk.OppoPushService"
            android:exported="true"
            android:permission="com.coloros.mcs.permission.RECIEVE_MCS_MESSAGE"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.coloros.mcs.action.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>
        <service
            android:name="com.igexin.sdk.OppoAppPushService"
            android:exported="true"
            android:permission="com.heytap.mcs.permission.RECIEVE_PUSH_MESSAGE"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.heytap.mcs.action.RECEIVE_MCS_MESSAGE" />
                <action android:name="com.heytap.msp.push.RECEIVE_MCS_MESSAGE" />
            </intent-filter>
        </service>

        <meta-data
            android:name="sdkVersion"
            android:value="3400" />

        <receiver
            android:name="com.igexin.sdk.VivoPushMessageReceiver"
            android:exported="false"
            android:process=":pushservice" >
            <intent-filter>

                <!-- 接收 push 消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE" />
            </intent-filter>
        </receiver> <!-- 该字段大于等于480，则表示支持点击消息直接打开应用activity，优化启动慢问题。 -->
        <meta-data
            android:name="sdk_version_vivo"
            android:value="488" />

        <service
            android:name="com.vivo.push.sdk.service.CommandClientService"
            android:exported="true"
            android:permission="com.push.permission.UPSTAGESERVICE"
            android:process=":pushservice" />

        <meta-data
            android:name="local_iv"
            android:value="MzMsMzQsMzUsMzYsMzcsMzgsMzksNDAsNDEsMzIsMzgsMzcsMzYsMzUsMzQsMzMsI0AzNCwzMiwzMywzNywzMywzNCwzMiwzMywzMywzMywzNCw0MSwzNSwzNSwzMiwzMiwjQDMzLDM0LDM1LDM2LDM3LDM4LDM5LDQwLDQxLDMyLDM4LDM3LDMzLDM1LDM0LDMzLCNAMzQsMzIsMzMsMzcsMzMsMzQsMzIsMzMsMzMsMzMsMzQsNDEsMzUsMzIsMzIsMzI" /> <!-- 支持性能监控 -->
        <meta-data
            android:name="com.vivo.push.support_monitor"
            android:value="1" />

        <receiver
            android:name="com.igexin.sdk.FlymePushReceiver"
            android:exported="true"
            android:process=":pushservice" >
            <intent-filter>

                <!-- 接收push消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收register消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收unregister消息 -->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本Flyme3推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.igexin.assist.control.stp.StpService"
            android:exported="true"
            android:permission="com.getui.vendor.push.permission"
            android:process=":pushservice" >
            <intent-filter>
                <category android:name="android.intent.category.DEFAULT" />

                <action android:name="com.sdk.ups.action.${applicationId}" />
            </intent-filter>
        </service>
        <service
            android:name="com.igexin.sdk.HonorPushMessageService"
            android:exported="false"
            android:process=":pushservice" >
            <intent-filter>
                <action android:name="com.hihonor.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.huawei.hms.aaid.InitProvider"
            android:authorities="${applicationId}.aaidinitprovider"
            android:exported="false"
            android:initOrder="500" />

        <meta-data
            android:name="com.huawei.hms.client.service.name:opendevice"
            android:value="opendevice:6.12.0.300" />
        <meta-data
            android:name="com.huawei.hms.min_api_level:opendevice:push"
            android:value="1" />

        <service
            android:name="com.meizu.cloud.pushsdk.NotificationService"
            android:exported="true" />

        <receiver
            android:name="com.meizu.cloud.pushsdk.MzPushSystemReceiver"
            android:exported="false"
            android:permission="com.meizu.flyme.permission.PUSH" >
            <intent-filter>
                <action android:name="com.meizu.flyme.push.intent.PUSH_SYSTEM" />
            </intent-filter>
        </receiver>

        <meta-data
            android:name="com.hihonor.push.sdk_version"
            android:value="7.0.61.303" /> <!-- 为后续统计第三方app集成了哪些Kit，因此需要Kit在自己的AndroidManifest.xml文件中定义业务标签元数据 -->
        <meta-data
            android:name="com.huawei.hms.client.service.name:base"
            android:value="base:6.11.0.302" /> <!-- SDK依赖的HMSCore的最低api level元数据 -->
        <meta-data
            android:name="com.huawei.hms.min_api_level:base:hmscore"
            android:value="1" /> <!-- 用于判断是否集成了本lib -->
        <meta-data
            android:name="availableLoaded"
            android:value="yes" />

        <activity
            android:name="com.huawei.hms.activity.BridgeActivity"
            android:configChanges="orientation|locale|layoutDirection|fontScale|screenSize|smallestScreenSize|screenLayout|uiMode"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:screenOrientation="behind"
            android:theme="@style/Base_Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>
        <activity
            android:name="com.huawei.hms.activity.EnableServiceActivity"
            android:configChanges="orientation|keyboardHidden|screenSize|smallestScreenSize|screenLayout"
            android:exported="false" >
        </activity>

        <provider
            android:name="com.huawei.agconnect.core.provider.AGConnectInitializeProvider"
            android:authorities="${applicationId}.AGCInitializeProvider"
            android:exported="false" />

        <service
            android:name="com.huawei.agconnect.core.ServiceDiscovery"
            android:exported="false" />
    </application>

</manifest>